name: Github master Pipeline
on:
  push:
    branches:
      - master
    workflow_dispatch:
      if: github.ref == 'refs/heads/master'

env:
  region: us-west-2
  stage: prod
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref:  master
      - name: Code Pushed
        run: echo "Deployment made by ${{ github.actor }} on branch ${{ github.ref }}"
        continue-on-error: true
      - name: Wait for deployment approval
        if: github.event_name == 'deployment'
        uses: github-developer/wait-for-deployment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ github.event.deployment.environment }}
          deployment_id: ${{ github.event.deployment.id }}
          required_contexts: ''
      - name: Source Code Link
        run: echo "Source code- ${{ github.event.repository.html_url }}/tree/${{ github.sha }}"

      - name: installing python 3.8
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.8 python3.8-distutils
          python3.8 --version
          which python3.8

      - name: Install basic dependencies
        run: |
          echo "installing and updating basic dependencies"
          sudo apt install gcc curl -y 
      - name: Installing pip for python 3.8
        run: |
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3.8 get-pip.py

      - name: installing pip setup tools
        run: |
          pip install --upgrade pip setuptools
          pip install -r requirements.txt

      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install s3 deploy
        run: |
          sudo rm -rfv node_modules
          npm install -g serverless-s3-deploy@0.10.1
      - name: Install Serverless Framework
        run: |
          npm install -g serverless@3.1.1
          npm install -g serverless-python-requirements@latest
          npm install -g --production
      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: configure sls
        run: sls config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Deploy Lambda function
        run: |
          export SLS_DEBUG=*
          sls deploy --stage ${{env.stage}} --region ${{env.region}}
